openapi: 3.0.3
info:
  title: Claude Marketplace Aggregator API
  description: |
    A comprehensive REST API for accessing Claude Code marketplace data,
    system status, and analytics. The API provides real-time information about
    plugins, marketplaces, and ecosystem insights.

    ## Features
    - Marketplace and plugin discovery
    - Real-time system monitoring
    - Performance metrics and analytics
    - Comprehensive data access
    - Rate limiting and caching
  version: 1.0.0
  contact:
    name: Claude Marketplace Team
    url: https://github.com/claude-marketplace/aggregator
    email: support@claude-marketplace.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  x-logo:
    url: https://claude-marketplace.github.io/aggregator/logo.png
    altText: Claude Marketplace Aggregator

servers:
  - url: https://claude-marketplace.github.io/aggregator
    description: Production server
  - url: http://localhost:3000
    description: Development server

paths:
  /api/health:
    get:
      tags:
        - Health
      summary: Get system health status
      description: |
        Returns basic system health status including data file status,
        GitHub API connectivity, build status, and memory usage.
      operationId: getHealth
      responses:
        '200':
          description: Health status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              examples:
                healthy:
                  summary: Healthy system
                  value:
                    status: healthy
                    timestamp: "2024-01-01T00:00:00Z"
                    uptime: 86400
                    version: "1.0.0"
                    checks:
                      dataFiles: true
                      githubApi: true
                      buildStatus: true
                      memoryUsage: true
                    details:
                      dataFreshness: "2 hours ago"
                      lastScan: "2024-01-01T02:00:00Z"
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unhealthy:
                  summary: Unhealthy system
                  value:
                    success: false
                    error:
                      code: SERVICE_UNAVAILABLE
                      message: "System health check failed"
                    timestamp: "2024-01-01T00:00:00Z"

  /api/status:
    get:
      tags:
        - Health
      summary: Get detailed system status
      description: |
        Provides detailed system diagnostics including rate limits,
        performance metrics, error counts, and component status.
      operationId: getStatus
      responses:
        '200':
          description: System status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/metrics:
    get:
      tags:
        - Metrics
      summary: Get performance metrics
      description: |
        Returns performance metrics in JSON or Prometheus format.
        Includes response times, memory usage, and system performance data.
      operationId: getMetrics
      parameters:
        - name: format
          in: query
          description: Response format
          schema:
            type: string
            enum: [json, prometheus]
            default: json
        - name: include
          in: query
          description: Include additional Prometheus metrics
          schema:
            type: string
            enum: [prometheus]
      responses:
        '200':
          description: Metrics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
            text/plain:
              schema:
                type: string
                description: Prometheus format metrics
              example: |
                # HELP claude_marketplace_api_duration_ms API request duration in milliseconds
                # TYPE claude_marketplace_api_duration_ms gauge
                claude_marketplace_api_duration_ms 145

                # HELP claude_marketplace_memory_used_bytes Memory usage in bytes
                # TYPE claude_marketplace_memory_used_bytes gauge
                claude_marketplace_memory_used_bytes{type="heap_used"} 45678912

  /api/analytics:
    get:
      tags:
        - Analytics
      summary: Get analytics dashboard data
      description: |
        Provides comprehensive analytics data about the ecosystem including
        overview statistics, trends, top performers, and system health.
      operationId: getAnalytics
      parameters:
        - name: period
          in: query
          description: Time period for trend data
          schema:
            type: string
            enum: [daily, weekly, monthly]
            default: daily
        - name: limit
          in: query
          description: Number of items to return in lists
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
      responses:
        '200':
          description: Analytics data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsResponse'

  /data/index.json:
    get:
      tags:
        - Data
      summary: Get summary statistics
      description: Returns summary statistics and metadata about the marketplace data.
      operationId: getIndexData
      responses:
        '200':
          description: Summary data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexDataResponse'

  /data/marketplaces.json:
    get:
      tags:
        - Data
      summary: Get all marketplaces
      description: Returns all discovered marketplaces with optional filtering and sorting.
      operationId: getMarketplaces
      parameters:
        - name: category
          in: query
          description: Filter by category
          schema:
            type: string
        - name: language
          in: query
          description: Filter by programming language
          schema:
            type: string
        - name: sort
          in: query
          description: Sort field
          schema:
            type: string
            enum: [stars, forks, updated, name]
            default: stars
        - name: order
          in: query
          description: Sort order
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: limit
          in: query
          description: Number of results to return
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
      responses:
        '200':
          description: Marketplaces retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplacesResponse'

  /data/plugins.json:
    get:
      tags:
        - Data
      summary: Get all plugins
      description: Returns all discovered plugins with optional filtering and sorting.
      operationId: getPlugins
      parameters:
        - name: marketplace
          in: query
          description: Filter by marketplace ID
          schema:
            type: string
        - name: category
          in: query
          description: Filter by category
          schema:
            type: string
        - name: author
          in: query
          description: Filter by author
          schema:
            type: string
        - name: tags
          in: query
          description: Filter by tags (comma-separated)
          schema:
            type: string
        - name: sort
          in: query
          description: Sort field
          schema:
            type: string
            enum: [stars, downloads, updated, name]
            default: stars
        - name: order
          in: query
          description: Sort order
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: limit
          in: query
          description: Number of results to return
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
      responses:
        '200':
          description: Plugins retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginsResponse'

  /data/complete.json:
    get:
      tags:
        - Data
      summary: Get complete dataset
      description: Returns complete dataset with all marketplaces and plugins.
      operationId: getCompleteData
      responses:
        '200':
          description: Complete data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteDataResponse'

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
          description: Overall health status
        timestamp:
          type: string
          format: date-time
          description: Response timestamp
        uptime:
          type: integer
          description: System uptime in seconds
        version:
          type: string
          description: Current version
        checks:
          type: object
          properties:
            dataFiles:
              type: boolean
              description: Data files check status
            githubApi:
              type: boolean
              description: GitHub API connectivity status
            buildStatus:
              type: boolean
              description: Build status
            memoryUsage:
              type: boolean
              description: Memory usage status
        details:
          type: object
          properties:
            dataFreshness:
              type: string
              description: Data freshness description
            lastScan:
              type: string
              format: date-time
              description: Last scan timestamp
            memoryUsage:
              $ref: '#/components/schemas/MemoryUsage'

    StatusResponse:
      type: object
      properties:
        status:
          type: string
          enum: [operational, degraded, down]
          description: Overall system status
        timestamp:
          type: string
          format: date-time
          description: Response timestamp
        uptime:
          type: integer
          description: System uptime in seconds
        version:
          type: string
          description: Current version
        environment:
          type: string
          description: Environment name
        systems:
          type: object
          properties:
            data:
              $ref: '#/components/schemas/DataSystemStatus'
            github:
              $ref: '#/components/schemas/GitHubSystemStatus'
            build:
              $ref: '#/components/schemas/BuildSystemStatus'
            performance:
              $ref: '#/components/schemas/PerformanceSystemStatus'
        incidents:
          type: array
          items:
            $ref: '#/components/schemas/Incident'
        metrics:
          $ref: '#/components/schemas/SystemMetrics'

    MetricsResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Response timestamp
        uptime:
          type: integer
          description: System uptime in seconds
        version:
          type: string
          description: Current version
        performance:
          type: object
          properties:
            report:
              $ref: '#/components/schemas/PerformanceReport'
            prometheus:
              type: string
              description: Prometheus format metrics
        system:
          type: object
          properties:
            nodeVersion:
              type: string
              description: Node.js version
            platform:
              type: string
              description: Operating system platform
            arch:
              type: string
              description: System architecture
            memory:
              $ref: '#/components/schemas/MemoryUsage'

    AnalyticsResponse:
      type: object
      properties:
        overview:
          $ref: '#/components/schemas/OverviewStats'
        trends:
          type: object
          properties:
            daily:
              type: array
              items:
                $ref: '#/components/schemas/DailyTrend'
            weekly:
              type: array
              items:
                $ref: '#/components/schemas/WeeklyTrend'
            monthly:
              type: array
              items:
                $ref: '#/components/schemas/MonthlyTrend'
        ecosystem:
          type: object
          properties:
            topMarketplaces:
              type: array
              items:
                $ref: '#/components/schemas/TopMarketplace'
            topPlugins:
              type: array
              items:
                $ref: '#/components/schemas/TopPlugin'
            activeContributors:
              type: array
              items:
                $ref: '#/components/schemas/ActiveContributor'
        health:
          $ref: '#/components/schemas/HealthMetrics'

    Marketplace:
      type: object
      properties:
        id:
          type: string
          description: Unique marketplace identifier
        name:
          type: string
          description: Marketplace name
        description:
          type: string
          description: Marketplace description
        url:
          type: string
          format: uri
          description: Marketplace URL
        repositoryUrl:
          type: string
          format: uri
          description: Repository URL
        stars:
          type: integer
          description: GitHub stars count
        forks:
          type: integer
          description: GitHub forks count
        language:
          type: string
          description: Primary programming language
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
        topics:
          type: array
          items:
            type: string
          description: Repository topics
        hasManifest:
          type: boolean
          description: Has valid marketplace.json manifest
        owner:
          type: string
          description: Repository owner
        pluginCount:
          type: integer
          description: Number of plugins
        verified:
          type: boolean
          description: Verification status
        category:
          type: string
          description: Primary category
        lastCommit:
          type: string
          format: date-time
          description: Last commit timestamp

    Plugin:
      type: object
      properties:
        id:
          type: string
          description: Unique plugin identifier
        name:
          type: string
          description: Plugin name
        description:
          type: string
          description: Plugin description
        version:
          type: string
          description: Plugin version
        author:
          type: string
          description: Plugin author
        repository:
          type: string
          format: uri
          description: Plugin repository URL
        homepage:
          type: string
          format: uri
          description: Plugin homepage URL
        license:
          type: string
          description: Plugin license
        keywords:
          type: array
          items:
            type: string
          description: Plugin keywords
        category:
          type: string
          description: Primary category
        tags:
          type: array
          items:
            type: string
          description: Plugin tags
        stars:
          type: integer
          description: GitHub stars count
        downloads:
          type: integer
          description: Download count
        forks:
          type: integer
          description: GitHub forks count
        issues:
          type: integer
          description: Open issues count
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
        lastCommit:
          type: string
          format: date-time
          description: Last commit timestamp
        isValid:
          type: boolean
          description: Validation status
        marketplaceId:
          type: string
          description: Parent marketplace ID
        marketplaceName:
          type: string
          description: Parent marketplace name
        verified:
          type: boolean
          description: Verification status
        metadata:
          type: object
          description: Additional metadata
          properties:
            description:
              type: string
              description: Detailed description
            installation:
              type: string
              description: Installation instructions
            usage:
              type: string
              description: Usage example
            dependencies:
              type: array
              items:
                type: string
              description: Dependencies
            claudeVersion:
              type: string
              description: Minimum Claude version

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              description: Error code
            message:
              type: string
              description: Error message
            details:
              type: object
              description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
        requestId:
          type: string
          description: Request identifier

    # Supporting schemas
    MemoryUsage:
      type: object
      properties:
        heapUsed:
          type: integer
          description: Heap used in bytes
        heapTotal:
          type: integer
          description: Heap total in bytes
        external:
          type: integer
          description: External memory in bytes
        rss:
          type: integer
          description: Resident set size in bytes

    DataSystemStatus:
      type: object
      properties:
        status:
          type: string
          enum: [operational, degraded, down]
        lastUpdate:
          type: string
          format: date-time
        totalMarketplaces:
          type: integer
        totalPlugins:
          type: integer
        dataFreshness:
          type: string
        errors:
          type: array
          items:
            type: string

    GitHubSystemStatus:
      type: object
      properties:
        status:
          type: string
          enum: [operational, degraded, down]
        rateLimit:
          type: object
          properties:
            limit:
              type: integer
            remaining:
              type: integer
            reset:
              type: string
              format: date-time
            used:
              type: integer
        lastCheck:
          type: string
          format: date-time
        errors:
          type: array
          items:
            type: string

    BuildSystemStatus:
      type: object
      properties:
        status:
          type: string
          enum: [operational, degraded, down]
        lastBuild:
          type: string
          format: date-time
        buildTime:
          type: string
        errors:
          type: array
          items:
            type: string

    PerformanceSystemStatus:
      type: object
      properties:
        status:
          type: string
          enum: [operational, degraded, down]
        memory:
          type: object
          properties:
            used:
              type: integer
            total:
              type: integer
            percentage:
              type: integer
        responseTime:
          type: integer
        errors:
          type: array
          items:
            type: string

    Incident:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [low, medium, high, critical]
        status:
          type: string
          enum: [open, investigating, resolved]
        createdAt:
          type: string
          format: date-time
        resolvedAt:
          type: string
          format: date-time

    SystemMetrics:
      type: object
      properties:
        requestsToday:
          type: integer
        errorsToday:
          type: integer
        averageResponseTime:
          type: integer
        uptimePercentage:
          type: number

    PerformanceReport:
      type: object
      properties:
        totalMetrics:
          type: integer
        averageResponseTime:
          type: integer
        memoryUsage:
          $ref: '#/components/schemas/MemoryUsage'
        errorCount:
          type: integer

    OverviewStats:
      type: object
      properties:
        totalMarketplaces:
          type: integer
        totalPlugins:
          type: integer
        totalDownloads:
          type: integer
        totalStars:
          type: integer
        activeDevelopers:
          type: integer
        languages:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              count:
                type: integer
              percentage:
                type: integer
        categories:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              count:
                type: integer
              percentage:
                type: integer

    DailyTrend:
      type: object
      properties:
        date:
          type: string
          format: date
        marketplaces:
          type: integer
        plugins:
          type: integer
        stars:
          type: integer
        downloads:
          type: integer

    WeeklyTrend:
      type: object
      properties:
        week:
          type: string
          format: date
        marketplaces:
          type: integer
        plugins:
          type: integer
        stars:
          type: integer
        downloads:
          type: integer

    MonthlyTrend:
      type: object
      properties:
        month:
          type: string
          format: date
          pattern: "YYYY-MM"
        marketplaces:
          type: integer
        plugins:
          type: integer
        stars:
          type: integer
        downloads:
          type: integer

    TopMarketplace:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        stars:
          type: integer
        forks:
          type: integer
        plugins:
          type: integer
        lastUpdated:
          type: string
          format: date-time

    TopPlugin:
      type: object
      properties:
        name:
          type: string
        repository:
          type: string
        stars:
          type: integer
        downloads:
          type: integer
        author:
          type: string
        lastUpdated:
          type: string
          format: date-time

    ActiveContributor:
      type: object
      properties:
        username:
          type: string
        contributions:
          type: integer
        repositories:
          type: integer

    HealthMetrics:
      type: object
      properties:
        dataFreshness:
          type: string
        lastScan:
          type: string
          format: date-time
        scanDuration:
          type: integer
        errorCount:
          type: integer
        successRate:
          type: integer
        githubApiStatus:
          type: string
          enum: [healthy, degraded, down]
        rateLimitStatus:
          type: object
          properties:
            limit:
              type: integer
            remaining:
              type: integer
            reset:
              type: string
              format: date-time

    MarketplacesResponse:
      type: object
      properties:
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
        pagination:
          type: object
          properties:
            page:
              type: integer
            limit:
              type: integer
            total:
              type: integer
            hasMore:
              type: boolean

    PluginsResponse:
      type: object
      properties:
        plugins:
          type: array
          items:
            $ref: '#/components/schemas/Plugin'
        pagination:
          type: object
          properties:
            page:
              type: integer
            limit:
              type: integer
            total:
              type: integer
            hasMore:
              type: boolean

    IndexDataResponse:
      type: object
      properties:
        stats:
          type: object
          properties:
            totalMarketplaces:
              type: integer
            totalPlugins:
              type: integer
            totalDownloads:
              type: integer
            totalStars:
              type: integer
            lastUpdated:
              type: string
              format: date-time
        categories:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              count:
                type: integer
              description:
                type: string
        languages:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              count:
                type: integer
              percentage:
                type: integer
        metadata:
          type: object
          properties:
            lastScan:
              type: string
              format: date-time
            scanDuration:
              type: integer
            version:
              type: string

    CompleteDataResponse:
      type: object
      properties:
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
        plugins:
          type: array
          items:
            $ref: '#/components/schemas/Plugin'
        metadata:
          type: object
          properties:
            generatedAt:
              type: string
              format: date-time
            version:
              type: string
            totalMarketplaces:
              type: integer
            totalPlugins:
              type: integer

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Bearer token for authenticated endpoints

tags:
  - name: Health
    description: System health and status endpoints
  - name: Metrics
    description: Performance metrics and monitoring
  - name: Analytics
    description: Analytics and insights
  - name: Data
    description: Data access endpoints

security: []  # No global security required
name: Issue Triage

on:
  issues:
    types: [opened, reopened]
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write

jobs:
  auto-label:
    name: Auto Label Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && (github.event.action == 'opened' || github.event.action == 'reopened')

    steps:
      - name: Auto label based on content
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const title = issue.title.toLowerCase();
            const body = issue.body ? issue.body.toLowerCase() : '';
            const content = title + ' ' + body;

            const labels = [];

            // Bug detection
            if (content.includes('bug') || content.includes('error') || content.includes('issue') || content.includes('broken')) {
              labels.push('bug');
            }

            // Feature request detection
            if (content.includes('feature') || content.includes('enhancement') || content.includes('add') || content.includes('new')) {
              labels.push('enhancement');
            }

            // Documentation detection
            if (content.includes('doc') || content.includes('readme') || content.includes('guide')) {
              labels.push('documentation');
            }

            // Marketplace related
            if (content.includes('marketplace') || content.includes('plugin') || content.includes('scan')) {
              labels.push('marketplace');
            }

            // CI/CD related
            if (content.includes('ci') || content.includes('deploy') || content.includes('workflow') || content.includes('github action')) {
              labels.push('ci/cd');
            }

            // Add labels if any were identified
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: labels
              });
            }

            // Add welcome comment for new issues
            if (context.payload.action === 'opened') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `## 👋 Welcome! Thank you for opening an issue.

### 📋 Next Steps
1. A maintainer will review your issue shortly
2. Please provide any additional information if requested
3. Check for updates on this issue

### 🏷️ Auto-applied labels
${labels.length > 0 ? labels.map(label => `- \`${label}\``).join('\n') : 'No labels applied'}

---

🤖 Generated by [Claude Code](https://claude.ai/code) - GLM 4.6`
              });
            }

  auto-respond:
    name: Auto Respond to Common Questions
    runs-on: ubuntu-latest
    if: github.event_name == 'issue_comment'

    steps:
      - name: Auto respond to common questions
        uses: actions/github-script@v7
        with:
          script: |
            const comment = context.payload.comment;
            const body = comment.body.toLowerCase();

            // Skip if comment is from bot
            if (comment.user.type === 'Bot') {
              return;
            }

            let response = '';

            // Common responses
            if (body.includes('how to deploy') || body.includes('deployment')) {
              response = `## 🚀 Deployment Information

This project uses GitHub Pages for deployment. The deployment process is automated through GitHub Actions.

### 📝 Deployment Steps
1. Push changes to the \`main\` branch
2. CI pipeline runs automatically
3. If all checks pass, deployment to GitHub Pages occurs
4. Site is live at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}

### 🔧 Configuration
- Deployment workflow: \`.github/workflows/deploy.yml\`
- Static export configuration in \`next.config.js\`
- GitHub Pages settings in repository settings

Need help? Check the [README](../README.md) or open a new issue.

---
🤖 Generated by [Claude Code](https://claude.ai/code) - GLM 4.6`;
            }

            if (body.includes('how to scan') || body.includes('scan marketplaces')) {
              response = `## 🔍 Scanning Information

This project includes automated marketplace scanning capabilities.

### 📋 Scan Types
- **Marketplace Scan**: Searches GitHub for new marketplaces
- **Plugin Validation**: Validates plugin metadata and functionality
- **Data Generation**: Generates JSON data files for the website

### 🚀 Running Scans
\`\`\`bash
# Run full scan
npm run scan:full

# Run individual scans
npm run scan:marketplaces
npm run validate:plugins
npm run generate:data
\`\`\`

### ⏰ Scheduled Scans
- Automatic scans run every 6 hours
- Workflow: \`.github/workflows/scan.yml\`
- Results are committed automatically

### 🔧 Configuration
- Environment variables in \`.env.example\`
- GitHub API rate limits
- Cache configuration for performance

Need help? Check the scripts in \`/scripts/\` directory or open a new issue.

---
🤖 Generated by [Claude Code](https://claude.ai/code) - GLM 4.6`;
            }

            if (body.includes('contribute') || body.includes('how to help')) {
              response = `## 🤝 Contributing Information

Thank you for your interest in contributing! Here's how you can help:

### 📋 Ways to Contribute
1. **Report Issues**: Found a bug? Open an issue with details
2. **Feature Requests**: Have an idea? Suggest it in an issue
3. **Code Contributions**: Submit pull requests for improvements
4. **Documentation**: Help improve README and docs
5. **Marketplace Data**: Suggest new marketplaces to include

### 🚀 Getting Started
1. Fork the repository
2. Clone your fork locally
3. Create a feature branch: \`git checkout -b feature-name\`
4. Make your changes
5. Run tests: \`npm test\`
6. Submit a pull request

### 📝 Development Setup
\`\`\`bash
# Install dependencies
npm install

# Start development server
npm run dev

# Run tests
npm test

# Build for production
npm run build
\`\`\`

### 🔧 Project Structure
- \`/src\`: Next.js application source code
- \`/scripts\`: TypeScript scripts for scanning and data processing
- \`/data\`: Generated marketplace data files
- \`/.github/workflows\`: CI/CD pipeline configurations

Need more help? Check the [CONTRIBUTING.md](../CONTRIBUTING.md) file or ask in the comments.

---
🤖 Generated by [Claude Code](https://claude.ai/code) - GLM 4.6`;
            }

            // Post response if generated
            if (response) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: response
              });
            }